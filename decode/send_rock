#!/bin/bash

if [ $# -ne 3 ]; then
    echo "Usage: $0 dir team rockid"
    exit 2
fi

dir="$1"
team="$2"
rockid="$3"

[ -f "${0%/*}../config/config.vars" ] && . "${0%/*}../config/config.vars"

function error_exit {
    echo "$1" >&2
    exit "${2:-1}"
}

command -v flock >/dev/null 2>&1 || error_exit "$0 requires flock"
command -v curl >/dev/null 2>&1 || error_exit "$0 requires curl"

[ -n "$dir" ] || error_exit "must specify root directory"
[[ $team =~ ^[0-9a-f]{16}$ ]] || error_exit "$team: invalid team identifier"
[ -z "$ROCK_USER" ] && error_exit "ROCK_USER: has not been defined"
[ -z "$ROCK_PASSWORD" ] && error_exit "ROCK_PASSWORD: has not been defined"

cd "$dir" || exit 1

[ -z "${rockid}" ] && exit 0
[ -e "$team/queue" ] || exit 0

exec 200<"$team/queue" || error_exit "$team/queue: file descriptor could not be opened for reading"
flock 200 || error_exit "$team/queue: unable to obtain lock"

[ -e "$team/queue/last" ] || exit 0

mkdir -p "$team/queue/logs" || exit 1

read last < "$team/queue/last"
[ -z "$last" ] && error_exit "$team/queue/last: should be a number"

if [ -f "$team/queue/rocksent" ]; then
    read sent < "$team/queue/rocksent"
    [ -z "$sent" ] && error_exit "$team/queue/rocksent: should be a number"
else
    sent=-1
fi

if [ -f "$team/queue/httpacked" ]; then
    read httpack < "$team/queue/httpacked"
    [ -z "$httpack" ] && error_exit "$team/queue/httpacked: should be a number"
    [ "$((10#$httpack))" -gt "$((#$sent))" ] && sent=$httpack
fi

function nextseq {
    local seq=$((10#$1))
    printf "%010d\n" $((seq+1))
}

sent="$(nextseq "$sent")"
while [ "$sent" -ne "$last" ]; do
    [ -f "$team/queue/ready/$sent" ] || error_exit "$team/queue/read/$sent: not found"
    hexdata=`hexdump -v -e '/1 "%02x"' "$team/queue/ready/$sent"`

    curl --output "$team/queue/logs/${sent}.log" --include \
         --data "username=${ROCK_USER}&password=${ROCK_PASSWORD}&data=${hexdata}" \
         "https://core.rock7.com/API2/SendRawMessage/${rockid}"
    if [ $? -eq 0 ] && grep receipt "$team/queue/logs/${sent}.log"; then
        echo -n "$sent" > "$team/queue/rocksent"
        sent="$(nextseq "$sent")"
    else
        error_exit "Failed to send fragment ${sent} to ${rockid}, check ${team}/queue/logs/${sent}.log for more info"
    fi
done

